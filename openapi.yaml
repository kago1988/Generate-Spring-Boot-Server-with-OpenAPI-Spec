openapi: 3.0.1
info:
  title: Middleware API
  description: A middleware API that handles authentication, user management, and external API proxying.
  version: 1.0.0

servers:
  - url: http://localhost:8080/api

paths:
  /auth/login:
    post:
      summary: User login
      operationId: loginUser
      tags:
        - AuthenticationController
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/LoginRequest"
      responses:
        "200":
          description: Successful login
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AuthResponse"
        "401":
          description: Unauthorized

  /auth/register:
    post:
      summary: User registration
      operationId: registerUser
      tags:
        - AuthenticationController
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/RegisterRequest"
      responses:
        "201":
          description: User registered successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AuthResponse"
        "400":
          description: Bad request

  /users/me:
    get:
      summary: Get the authenticated user's profile
      operationId: getCurrentUser
      tags:
        - UserController
      security:
        - BearerAuth: []
      responses:
        "200":
          description: User profile
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/User"
        "401":
          description: Unauthorized

  /users/{id}:
    get:
      summary: Get user details by ID
      operationId: getUserById
      tags:
        - UserController
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: User details
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/User"
        "404":
          description: User not found

  /external/data:
    get:
      summary: Fetch data from an external API
      operationId: fetchExternalData
      tags:
        - ExternalDataController
      security:
        - BearerAuth: []
      responses:
        "200":
          description: External API response
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        "502":
          description: Bad Gateway

components:
  schemas:
    LoginRequest:
      type: object
      properties:
        username:
          type: string
        password:
          type: string
      required:
        - username
        - password

    RegisterRequest:
      type: object
      properties:
        username:
          type: string
        email:
          type: string
        password:
          type: string
      required:
        - username
        - email
        - password

    AuthResponse:
      type: object
      properties:
        token:
          type: string
        expiresIn:
          type: integer
          example: 3600

    User:
      type: object
      properties:
        id:
          type: string
        username:
          type: string
        email:
          type: string

  securitySchemes:
    BearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
